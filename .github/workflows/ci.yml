name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
          pip install -e .
      
      - name: Lint with ruff
        run: |
          ruff check zarr_utils tests
          ruff format --check zarr_utils tests
      
      - name: Type check with mypy
        run: mypy zarr_utils

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Test with pytest
        run: |
          pytest -v --cov=zarr_utils --cov-report=xml --cov-report=term
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  test-minimal-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .  # Just core dependencies
          pip install pytest pytest-cov
      
      - name: Test core functionality
        run: |
          # Test without optional dependencies like VTK
          pytest -v tests/test_inspect.py tests/test_xarray.py tests/test_metadata.py tests/test_debug.py

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      
      - name: Check that zarr-utils imports
        run: |
          python -c "import zarr_utils; print(f'zarr-utils version: {zarr_utils.__version__}')"
      
      - name: Validate CLAUDE.md exists
        run: |
          test -f CLAUDE.md || (echo "CLAUDE.md is missing!" && exit 1)