name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release build twine
          pip install -e .
      
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.7.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build package
        if: steps.release.outputs.released == 'true'
        run: |
          python -m build
      
      - name: Publish to PyPI
        if: steps.release.outputs.released == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
      
      - name: Publish GitHub Release
        if: steps.release.outputs.released == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.release.outputs.version }} \
            --title "v${{ steps.release.outputs.version }}" \
            --notes "${{ steps.release.outputs.changelog }}" \
            dist/*